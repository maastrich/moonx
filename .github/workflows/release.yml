name: Release

on:
  push:
    tags:
      - "v*.*.*"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [darwin, linux]
        arch: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build binary
        run: bun build src/index.ts --target="bun-${{ matrix.platform }}-${{ matrix.arch }}" --outfile="bin/${{ matrix.platform }}-${{ matrix.arch }}" --compile

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          path: bin
          name: ${{ matrix.platform }}-${{ matrix.arch }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Format check
        run: pnpm run format

      - name: Type check
        run: pnpm run type-check

      - name: Lint
        run: pnpm run lint

      - name: Publish to npm
        run: pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            bin/darwin-x64/darwin-x64
            bin/darwin-arm64/darwin-arm64
            bin/linux-x64/linux-x64
            bin/linux-arm64/linux-arm64
          body: |
            ## Installation

            ```bash
            npm install @maastrich/moonx@${{ github.ref_name }}
            ```

            The platform-specific binaries will be automatically downloaded during installation.

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for full details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
